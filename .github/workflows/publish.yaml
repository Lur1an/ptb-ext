name: CI

on:
  push:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POETRY_NO_INTERACTION: 1
      POETRY_VIRTUALENVS_IN_PROJECT: 1
      POETRY_VIRTUALENVS_CREATE: 1

    steps:
      - uses: actions/checkout@v3

      - name: install python3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: install dependencies
        run: poetry install --no-cache

      - name: Run tests
        run: poetry run python -m pytest

  publish:
    runs-on: ubuntu-latest
    needs: test
    env:
      POETRY_NO_INTERACTION: 1
      POETRY_VIRTUALENVS_IN_PROJECT: 1
      POETRY_VIRTUALENVS_CREATE: 1
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: install python3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: install dependencies
        run: poetry install --no-cache

      - name: Configure Pypi
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build
        run: poetry build

      - name: publish
        run: poetry publish
      
